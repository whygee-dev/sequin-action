name: Demo Sequin Service with Custom Config

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  demo:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: myapp
          POSTGRES_USER: myapp
          POSTGRES_PASSWORD: myapp
          POSTGRES_INITDB_ARGS: "-c wal_level=logical"
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Database
        run: |
          PGPASSWORD=myapp psql -h localhost -U myapp -d myapp << EOL
          SELECT pg_create_logical_replication_slot('sequin_slot', 'pgoutput');
          CREATE PUBLICATION sequin_pub FOR TABLES IN SCHEMA public WITH (publish_via_partition_root = true);

          CREATE TABLE IF NOT EXISTS public."Customer" (
            id SERIAL PRIMARY KEY,
            name VARCHAR(100)
          );

          CREATE TABLE IF NOT EXISTS public."AuditLog" (
            id BIGSERIAL PRIMARY KEY,
            seq BIGINT NOT NULL,
            source_database_id UUID NOT NULL,
            source_table_oid BIGINT NOT NULL,
            source_table_schema TEXT NOT NULL,
            source_table_name TEXT NOT NULL,
            record_pk TEXT NOT NULL,
            record JSONB NOT NULL,
            changes JSONB,
            action TEXT NOT NULL,
            transaction_annotations JSONB,
            committed_at TIMESTAMP WITH TIME ZONE NOT NULL,
            inserted_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()
          );
          EOL

      - name: Create custom config
        run: |
          mkdir -p config
          cat > config/sequin.yml << EOL
          account:
            name: 'Playground'
          users:
            - account: 'Playground'
              email: 'admin@sequinstream.com'
              password: 'sequinpassword!'
          databases:
            - name: 'myapp'
              username: 'myapp'
              password: 'myapp'
              hostname: 'localhost'
              database: 'myapp'
              port: 5432
              slot_name: 'sequin_slot'
              publication_name: 'sequin_pub'
          change_retentions:
            - name: 'Customer Change Retention'
              source_database: 'myapp'
              source_table_schema: 'public'
              source_table_name: 'Customer'
              destination_database: 'myapp'
              destination_table_schema: 'public'
              destination_table_name: 'AuditLog'
          EOL

      - name: Setup Sequin Service with Custom Config
        uses: ./
        with:
          sequin-version: "latest"
          pg-password: "sequin"
          secret-key-base: "wDPLYus0pvD6qJhKJICO4dauYPXfO/Yl782Zjtpew5qRBDp7CZvbWtQmY0eB13If"
          vault-key: "2Sig69bIpuSm2kv0VQfDekET2qy8qUZGI8v3/h3ASiY="
          config-file: "./config/sequin.yml"
          health-check-timeout: "120"

      - name: Test Sequin Connection
        run: curl -f http://127.0.0.1:7376/health

      - name: Insert Sample Data
        run: |
          PGPASSWORD=myapp psql -h localhost -U myapp -d myapp -c "INSERT INTO public.\"Customer\" (name) VALUES ('John Doe');"

      - name: Verify Audit Log
        run: |
          for i in {1..50}; do
            echo "Attempt $i:"
            ROW_COUNT=$(PGPASSWORD=myapp psql -h localhost -U myapp -d myapp -t -c "SELECT COUNT(*) FROM public.\"AuditLog\";")
            echo "Total rows: $ROW_COUNT"
            if [ "$ROW_COUNT" -gt 0 ]; then
              echo "Found audit entries, showing details:"
              PGPASSWORD=myapp psql -h localhost -U myapp -d myapp -c "SELECT id, source_table_name, action, record_pk, committed_at FROM public.\"AuditLog\" ORDER BY id DESC LIMIT 5;"
              break
            fi
            if [ "$i" -eq 50 ]; then
              echo "No audit entries found after 50 attempts"
              exit 1
            fi
            sleep 2
          done
